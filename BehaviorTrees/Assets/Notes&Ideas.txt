Pull tasks from an xml document
Children of xml nodes are the children of that task
Game objects intended to be interfaced by tasks need a "TaskInterface" class
- Will have a dictionary called "conditions" that uses string keys to get boolean values
- Will have a dictionary called "actions" that has a dictionary containing function references
  - These functions should return a boolean value corresponding to success or failure, and have no inputs
  - Specifically, "Func<bool>"
All tasks can be "inverted" with the "invert" entry

=== Types of tasks ===
Sequence
- Same idea as Millington
- Has children
- No extra parameters
Selector
- Same idea as Millington
- Has children
- No extra parameters
Conditional
- Evaluates a condition
- No children
- Needs the name of the gameobject to check and the name of a key to use for a dictionary check with the associated TaskCondition
Action
- Calls a function to interact with something
- No children
- Needs the name of the gameobject to interact with and the name of the action to perform
Movement
- Sets a kinematic's target to a given target, and returns success once reaching the target
- No children
- Needs the name of the gameobject to move and the name of the gameobject to target
- Can optionally specify the threshold distance, check delay, and timeout period

=== Task Editor ===
Tasks are represented by little icons connected by arrows
Each icon has a symbol/shape for the type, a name, and an edit button
Clicking the edit button 
UI is a scrollable background
- Size is set to the smallest possible bounding box, plus some preset buffer
- If the size is smaller than the scroll panel, then the content is centered